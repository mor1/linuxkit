FROM mor1/alpine-build-kernel-arm64:1b3c702a61f2d024e3672664c9952d1a09af8400

ARG KERNEL_VERSION
ARG DEBUG
ARG ARCH

# Fetch kernel
ENV KERNEL_SOURCE=https://www.kernel.org/pub/linux/kernel/v4.x/linux-${KERNEL_VERSION}.tar.xz
RUN curl -fsSL -o linux-${KERNEL_VERSION}.tar.xz ${KERNEL_SOURCE}
RUN cat linux-${KERNEL_VERSION}.tar.xz \
    | tar --absolute-names -xJ \
    && mv /linux-${KERNEL_VERSION} /linux

# Construct kernel build config
COPY kernel_config /linux/arch/${ARCH}/configs/defconfig
COPY kernel_config.debug /linux/debug_config
RUN if [ $DEBUG -ne "0" ]; then \
    sed -i 's/CONFIG_PANIC_ON_OOPS=y/# CONFIG_PANIC_ON_OOPS is not set/' /linux/arch/x86/configs/x86_64_defconfig; \
    cat /linux/debug_config >> /linux/arch/x86/configs/x86_64_defconfig; \
    fi

# Apply local patches
COPY patches-4.9 /patches
RUN cd /linux && \
    set -e && for patch in /patches/*.patch; do \
        echo "Applying $patch"; \
        patch -p1 < "$patch"; \
    done

# Build kernel and modules
RUN cd /linux \
    && make defconfig \
    && make oldconfig \
    && make -j "$(getconf _NPROCESSORS_ONLN)" KCFLAGS="-fno-pie" \
    && make INSTALL_MOD_PATH=/tmp/kernel-modules modules_install

# Extract kernel, modules, headers
RUN cd /linux \
    && ( DVER=$(basename $(find /tmp/kernel-modules/lib/modules/ -mindepth 1 -maxdepth 1)) \
         && cd /tmp/kernel-modules/lib/modules/$DVER \
         && rm build source \
         && ln -s /usr/src/linux-headers-$DVER build \
       ) \
    && mkdir -p /tmp/kernel-headers/usr \
    && make INSTALL_HDR_PATH=/tmp/kernel-headers/usr headers_install \
    && ( cd /tmp/kernel-headers && tar cf /kernel-headers.tar usr ) \
    && ( cd /tmp/kernel-modules && tar cf /kernel-modules.tar lib ) \
    && cp vmlinux arch/$(ARCH)/boot/bzImage

RUN DVER=$(basename $(find /tmp/kernel-modules/lib/modules/ -mindepth 1 -maxdepth 1)) && \
    dir=/tmp/usr/src/linux-headers-$DVER && \
    mkdir -p $dir && \
    cp /linux/.config $dir && \
    cd /linux && \
    cp -a include "$dir" && \
    mkdir -p "$dir"/arch/$(ARCH) \
    && cp -a arch/$(ARCH)/include "$dir"/arch/$(ARCH)/ && \
    ( cd /tmp && tar cf /kernel-dev.tar usr/src )

RUN printf "KERNEL_SOURCE=${KERNEL_SOURCE}\n" > /kernel-source-info
